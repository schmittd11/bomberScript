function newCard() {
    return [
        [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
        [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
        [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
        [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],
        [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY]
    ];
}

function getPlayerColors() {
    const colors = [];
    for (let i = 0; i < 2; i++) {
        let color = i === 1 && colors[0] !== 'blue' ? 'blue' : 'red';
        try {
            const player_element = document.getElementById("players-panel").children.item(indicatorsRules.swap ? 1 - i : i);
            let colorClass = player_element.children.item(0).classList[1];
            color = colorClass.substring(0, colorClass.indexOf("square"));
        } catch (e) {
        } finally {
            colors.push(color);
        }
    }
    return colors;
}

function colorHasClicked(card, color) {
    for (let i = 0; i < 5; i++) {
        for (let j = 0; j < 5; j++) {
            if (card[i][j] == color) {
                return true;
            }
        }
    }
    return false;
}


function fillClickableGoals(card, color, colors){
	
  if (!colorHasClicked(clickableGoals, color)){
		for (let i = 0; i < 5; i++) {
        		for (let j = 0; j < 5; j++) {
          	  		clickableGoals[i][j] += `${color} `;
        		}
    		}
	} else {
		for (let i = 0; i < 5; i++) {
			for (let j = 0; j < 5; j++) {
				
         if (j === 0){
            up = 4;
				 } else {
					  up = j-1;
				 }

         if (j === 4){
					  down = 0;
				 } else {
					  down = j+1;
				 }

         if (i === 0){
					  left = 4;
				 } else {
					  left = i-1;
				 }

         if (i === 4){
					  right = 0;
				 } else {
					  right = i+1;
				 }

         if (card[i][up] === colors[0] || card[i][up] === colors[1]) {
					   clickableGoals[i][up] += `${color} `;
         } else if (card[i][down] === colors[0] || card[i][down] === colors[1]) {
					   clickableGoals[i][down] += `${color} `;
         } else if (card[left][j] === colors[0] || card[left][j] === colors[1]) {
					   clickableGoals[left][j] += `${color} `;
         } else if (card[i][down] === colors[0] || card[i][down] === colors[1]) {
					   clickableGoals[right][j] += `${color} `;
         }

			}
		}
    return clickableGoals;
	}


}
